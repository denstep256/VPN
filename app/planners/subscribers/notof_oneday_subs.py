from datetime import datetime, timedelta
from aiogram import Bot
from apscheduler.triggers.interval import IntervalTrigger
from apscheduler.schedulers.asyncio import AsyncIOScheduler
from sqlalchemy import select, update
from app.database.models import async_session, Subscribers


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–æ–∫, –∫–æ—Ç–æ—Ä—ã–µ –∏—Å—Ç–µ–∫–∞—é—Ç –∑–∞–≤—Ç—Ä–∞
async def check_subscriptions(bot: Bot):
    async with async_session() as session:
        tomorrow = datetime.now() + timedelta(days=1)

        # –ó–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ–¥–ø–∏—Å–æ–∫, —É –∫–æ—Ç–æ—Ä—ã—Ö –∏—Å—Ç–µ–∫–∞–µ—Ç –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –∑–∞–≤—Ç—Ä–∞
        query = select(Subscribers).filter(Subscribers.expiry_date == tomorrow.date())

        result = await session.execute(query)
        expiring_subscriptions = result.scalars().all()

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º, —á—å–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –∏—Å—Ç–µ–∫–∞—é—Ç
        for subscription in expiring_subscriptions:
            user_id = subscription.tg_id
            message = f"‚è≥ –í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –∏—Å—Ç–µ–∫–∞–µ—Ç –∑–∞–≤—Ç—Ä–∞, {subscription.expiry_date}.\n–ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø—Ä–æ–¥–ª–∏—Ç—å, —á—Ç–æ–±—ã –Ω–µ –ø–æ—Ç–µ—Ä—è—Ç—å –¥–æ—Å—Ç—É–ø! üöÄ"
            #TODO: –î–æ–±–∞–≤–∏—Ç—å —á—Ç–æ–±—ã –ø–æ—Å–ª–µ —Å–æ–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–∏—Å—ã–ª–∞–ª—Å—è —Å—á–µ—Ç –Ω–∞ –æ–ø–ª–∞—Ç—É –ø–æ–¥–ø–∏—Å–∫–∏

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram
            await bot.send_message(chat_id=user_id, text=message, parse_mode='HTML')
            update_query = (
                update(Subscribers)
                .where(Subscribers.tg_id == user_id)
                .values(notif_oneday=1)
            )
            await session.execute(update_query)


        await session.commit()


# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
def setup_scheduler_subs_notif_oneday(bot: Bot):

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
    scheduler = AsyncIOScheduler(timezone='Europe/Moscow')

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–¥–∞—á–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–æ–∫ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Ä–∞–∑ –≤ –¥–µ–Ω—å)
    scheduler.add_job(
        check_subscriptions,
        trigger=IntervalTrigger(seconds=10),  # –ó–∞–¥–∞—ë–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
        id='check_subscriptions_oneday',
        kwargs={'bot': bot},
        replace_existing=True
    )

    # –ó–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
    scheduler.start()

